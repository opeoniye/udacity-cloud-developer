version: "3"
services:

  # nginx reverseproxy
  reverseproxy:
      container_name: reverseproxy
      image: udagram-reverseproxy
      ports:
          - 8080:8080
      restart: always
      depends_on:
        - api-user
        - api-feed

  # user api backend service
  api-user:
    container_name: api-user
    image: udagram-api-user
    environment:
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST: host.docker.internal
      AWS_REGION: $AWS_REGION
      AWS_PROFILE: $AWS_PROFILE
      AWS_BUCKET: $AWS_BUCKET
      JWT_SECRET: $JWT_SECRET
      URL: "http://localhost:8100"

  # feed api backend service
  api-feed:
    container_name: api-feed
    image: udagram-api-feed
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST: host.docker.internal
      AWS_REGION: $AWS_REGION
      AWS_PROFILE: $AWS_PROFILE
      AWS_BUCKET: $AWS_BUCKET
      JWT_SECRET: $JWT_SECRET
      URL: "http://localhost:8100"

  # frontend service    
  frontend:
    container_name: frontend
    image: udagram-frontend:local
    ports:
      - "8100:80"